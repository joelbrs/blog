"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[6150],{4425:(e,a,o)=>{o.r(a),o.d(a,{assets:()=>d,contentTitle:()=>n,default:()=>l,frontMatter:()=>r,metadata:()=>t,toc:()=>m});var s=o(6070),i=o(5710);const r={slug:"idempotencia-parte-2",title:"Idempot\xeancia: Melhorando a Resili\xeancia de Seu Sistema - Parte II",authors:{name:"Joel da Silva Pereira Filho",title:"Backend Developer",url:"https://github.com/joelbrs",image_url:"https://github.com/joelbrs.png"},tags:["programming","idempotency"]},n=void 0,t={permalink:"/studies/blog/idempotencia-parte-2",source:"@site/blog/idempotencia-parte-2.md",title:"Idempot\xeancia: Melhorando a Resili\xeancia de Seu Sistema - Parte II",description:"No post anterior, discutimos os conceitos b\xe1sicos de Resili\xeancia e Idempot\xeancia. Al\xe9m disso, demonstrei como apliquei esses conceitos de forma pr\xe1tica em um projeto pessoal.",date:"2024-09-17T12:46:35.000Z",tags:[{inline:!0,label:"programming",permalink:"/studies/blog/tags/programming"},{inline:!0,label:"idempotency",permalink:"/studies/blog/tags/idempotency"}],readingTime:3.175,hasTruncateMarker:!1,authors:[{name:"Joel da Silva Pereira Filho",title:"Backend Developer",url:"https://github.com/joelbrs",image_url:"https://github.com/joelbrs.png",imageURL:"https://github.com/joelbrs.png"}],frontMatter:{slug:"idempotencia-parte-2",title:"Idempot\xeancia: Melhorando a Resili\xeancia de Seu Sistema - Parte II",authors:{name:"Joel da Silva Pereira Filho",title:"Backend Developer",url:"https://github.com/joelbrs",image_url:"https://github.com/joelbrs.png",imageURL:"https://github.com/joelbrs.png"},tags:["programming","idempotency"]},unlisted:!1,lastUpdatedAt:1726577195e3,prevItem:{title:"Idempot\xeancia: Melhorando a Resili\xeancia de Seu Sistema - Parte I",permalink:"/studies/blog/idempotencia-parte-1"}},d={authorsImageUrls:[void 0]},m=[{value:"Quais s\xe3o as limita\xe7\xf5es de gerar a Chave de Idempot\xeancia no Front-end?",id:"quais-s\xe3o-as-limita\xe7\xf5es-de-gerar-a-chave-de-idempot\xeancia-no-front-end",level:2},{value:"Qual seria a solu\xe7\xe3o?",id:"qual-seria-a-solu\xe7\xe3o",level:2},{value:"Por que essa \xe9 uma melhor solu\xe7\xe3o?",id:"por-que-essa-\xe9-uma-melhor-solu\xe7\xe3o",level:2},{value:"Como implementar essa solu\xe7\xe3o?",id:"como-implementar-essa-solu\xe7\xe3o",level:2}];function c(e){const a={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(a.p,{children:["No ",(0,s.jsx)(a.a,{href:"https://joelbrs.github.io/blog/posts/idempotencia-parte-1",children:"post anterior"}),", discutimos os conceitos b\xe1sicos de Resili\xeancia e Idempot\xeancia. Al\xe9m disso, demonstrei como apliquei esses conceitos de forma pr\xe1tica em um projeto pessoal."]}),"\n",(0,s.jsx)(a.p,{children:"Agora, explorarei algumas limita\xe7\xf5es do modelo inicialmente proposto e apresentarei uma alternativa vi\xe1vel para implementar idempot\xeancia, que \xe9 mais perform\xe1tica."}),"\n",(0,s.jsx)(a.h2,{id:"quais-s\xe3o-as-limita\xe7\xf5es-de-gerar-a-chave-de-idempot\xeancia-no-front-end",children:"Quais s\xe3o as limita\xe7\xf5es de gerar a Chave de Idempot\xeancia no Front-end?"}),"\n",(0,s.jsx)(a.p,{children:"No modelo proposto anteriormente, a chave de idempot\xeancia \xe9 gerada pelo front-end, armazenada no SessionStorage do navegador e posteriormente enviada ao back-end. Embora essa abordagem funcione, n\xe3o \xe9 a mais adequada para resolver o problema."}),"\n",(0,s.jsx)(a.p,{children:"Primeiramente, a gera\xe7\xe3o da chave pelo front-end permite que o usu\xe1rio do sistema a manipule, j\xe1 que \xe9 facilmente acess\xedvel ao abrir a aba de armazenamento do navegador."}),"\n",(0,s.jsx)(a.p,{children:"Em segundo lugar, e estritamente relacionado ao primeiro ponto, como o front-end est\xe1 mais suscet\xedvel a manipula\xe7\xf5es e ataques cibern\xe9ticos. Por padr\xe3o, regras de neg\xf3cio n\xe3o devem ser estabelecidas no front-end. Caso haja necessidade, elas devem ser refor\xe7adas no back-end."}),"\n",(0,s.jsx)(a.h2,{id:"qual-seria-a-solu\xe7\xe3o",children:"Qual seria a solu\xe7\xe3o?"}),"\n",(0,s.jsx)(a.p,{children:"A primeira solu\xe7\xe3o, mais simples, seria criar um endpoint no back-end para gerar a chave de idempot\xeancia e armazen\xe1-la em mem\xf3ria. Nesse caso, poder\xedamos utilizar a abordagem de gerar um UUID como chave de idempot\xeancia."}),"\n",(0,s.jsx)(a.p,{children:"A segunda, mais robusta, \xe9 utilizar uma camada de cache para armazenar a chave de idempot\xeancia por um tempo pr\xe9-estabelecido. Nesse caso, a chave de idempot\xeancia poderia ser criada a partir de um hash das informa\xe7\xf5es da conta do remetente, do destinat\xe1rio, do valor e da descri\xe7\xe3o (se houver). Essa chave seria armazenada em um Redis, por exemplo, por 5 minutos (ou qualquer outro per\xedodo de tempo, dependendo da implementa\xe7\xe3o). Caso a requisi\xe7\xe3o se repita devido a alguma instabilidade, a chave ser\xe1 buscada no cache e a transa\xe7\xe3o ser\xe1 encontrada."}),"\n",(0,s.jsxs)(a.blockquote,{children:["\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.em,{children:"Na segunda proposta, n\xe3o optei por gerar um UUID a cada transa\xe7\xe3o. Isso se deve ao fato de que, se um UUID for gerado a cada requisi\xe7\xe3o para criar uma transa\xe7\xe3o, mesmo que uma requisi\xe7\xe3o seja duplicada, ainda assim seriam duas requisi\xe7\xf5es diferentes, resultando em UUIDs distintos. Dessa forma, nossa chave de idempot\xeancia n\xe3o seria verdadeiramente idempotente."})}),"\n"]}),"\n",(0,s.jsx)(a.h2,{id:"por-que-essa-\xe9-uma-melhor-solu\xe7\xe3o",children:"Por que essa \xe9 uma melhor solu\xe7\xe3o?"}),"\n",(0,s.jsx)(a.p,{children:"Primeiro, porque eliminamos a necessidade de um campo correspondente \xe0 chave de idempot\xeancia no banco de dados, evitando sobrecarregar o banco de dados principal com consultas para verificar se a transa\xe7\xe3o j\xe1 existe. A consulta ao Redis \xe9 muito mais r\xe1pida, perform\xe1tica e menos custosa."}),"\n",(0,s.jsx)(a.p,{children:"Segundo, porque retiramos qualquer regra de neg\xf3cio do front-end, evitando assim que nosso sistema esteja mais vulner\xe1vel a ataques e manipula\xe7\xf5es indesejadas dos dados."}),"\n",(0,s.jsx)(a.h2,{id:"como-implementar-essa-solu\xe7\xe3o",children:"Como implementar essa solu\xe7\xe3o?"}),"\n",(0,s.jsx)(a.p,{children:"Primeiro, vamos instalar o Redis no nosso projeto NodeJS:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-ts",children:"pnpm add ioredis\n"})}),"\n",(0,s.jsx)(a.p,{children:"Vamos criar uma inst\xe2ncia do Redis:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-ts",children:"import Redis from 'ioredis';\r\n\r\nconst redis = new Redis();\n"})}),"\n",(0,s.jsx)(a.p,{children:"Agora, vamos criar o hash que ser\xe1 nossa chave de idempot\xeancia:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-ts",children:"import crypto from 'node:crypto';\r\n\r\nasync createTransaction(data, ctx) {\r\n  ...\r\n  const { value, description } = data;\r\n\r\n  const dataToBeHashed = `${senderAccount._id}-${receiverAccount?._id}-${value}-${description}`\r\n\r\n  const idempotentKey = \r\n  crypto.createHash('sha256').update(dataToBeHashed).digest('hex')\r\n\r\n  ...\r\n}\r\n\n"})}),"\n",(0,s.jsx)(a.p,{children:"Em seguida, definimos essa chave de idempot\xeancia no cache e verificamos sua exist\xeancia:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-ts",children:"async createTransaction(data, ctx) {\r\n   ...\r\n\r\n   const existingTransaction = await redis.set(idempotentKey, 'transaction', 'EX', 60 * 5, 'GET')\r\n\r\n   if (existingTransaction) {\r\n     return false\r\n   }\r\n   ...\r\n}\n"})}),"\n",(0,s.jsx)(a.p,{children:"Esta foi uma demonstra\xe7\xe3o simples de como essa abordagem pode ser implementada com NodeJS, independentemente do framework utilizado, seja Express, NestJS, Koa ou Fastify."}),"\n",(0,s.jsx)(a.p,{children:"Essa implementa\xe7\xe3o ainda n\xe3o est\xe1 dispon\xedvel no reposit\xf3rio do projeto, mas pretendo trabalhar nisso nos pr\xf3ximos dias."}),"\n",(0,s.jsx)(a.p,{children:"Esta s\xe9rie de posts foi criada para compartilhar minha jornada no desenvolvimento deste projeto e as decis\xf5es que tomei com base em meus estudos e reflex\xf5es."}),"\n",(0,s.jsxs)(a.p,{children:["Estou aberto a feedbacks e novas propostas. Pretendo implementar novas features futuramente, ent\xe3o estou \xe0 disposi\xe7\xe3o para conversar mais sobre isso no meu ",(0,s.jsx)(a.a,{href:"https://linkedin.com/in/joelbrs",children:"LinkedIn"}),"."]})]})}function l(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},5710:(e,a,o)=>{o.d(a,{R:()=>n,x:()=>t});var s=o(758);const i={},r=s.createContext(i);function n(e){const a=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function t(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:n(e.components),s.createElement(r.Provider,{value:a},e.children)}}}]);