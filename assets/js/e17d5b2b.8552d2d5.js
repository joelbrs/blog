"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[2477],{6776:(e,s,o)=>{o.r(s),o.d(s,{assets:()=>d,contentTitle:()=>a,default:()=>l,frontMatter:()=>n,metadata:()=>t,toc:()=>c});var r=o(6070),i=o(5710);const n={sidebar_position:1,id:"introduction",tags:["back-end","microservices","system design","studies","introduction"]},a="Introdu\xe7\xe3o",t={id:"backend/microservices/introduction",title:"Introdu\xe7\xe3o",description:"A Arquitetura de Microsservi\xe7os vem ganhando bastante destaque nos \xfaltimos anos e vem sendo um dos principais requisitos para cargos como Desenvolvedores ou Engenheiros de Software. Por isso, vem sendo necess\xe1rio que os programadores n\xe3o s\xf3 tenham um certo n\xedvel de conhecimento sobre o assunto, como o dominem.",source:"@site/docs/backend/microservices/introduction.md",sourceDirName:"backend/microservices",slug:"/backend/microservices/introduction",permalink:"/studies/backend/microservices/introduction",draft:!1,unlisted:!1,editUrl:"https://github.com/joelbrs/blog/edit/main/docs/backend/microservices/introduction.md",tags:[{inline:!0,label:"back-end",permalink:"/studies/tags/back-end"},{inline:!0,label:"microservices",permalink:"/studies/tags/microservices"},{inline:!0,label:"system design",permalink:"/studies/tags/system-design"},{inline:!0,label:"studies",permalink:"/studies/tags/studies"},{inline:!0,label:"introduction",permalink:"/studies/tags/introduction"}],version:"current",lastUpdatedBy:"Joel da Silva Pereira Filho",lastUpdatedAt:1726519786e3,sidebarPosition:1,frontMatter:{sidebar_position:1,id:"introduction",tags:["back-end","microservices","system design","studies","introduction"]},sidebar:"tutorialSidebar",previous:{title:"Sobre a se\xe7\xe3o",permalink:"/studies/backend/microservices/"},next:{title:"Learning Path",permalink:"/studies/category/learning-path"}},d={},c=[{value:"Mas, o que seriam Microsservi\xe7os?",id:"mas-o-que-seriam-microsservi\xe7os",level:3},{value:"Uma breve introdu\xe7\xe3o sobre Monolitos",id:"uma-breve-introdu\xe7\xe3o-sobre-monolitos",level:3},{value:"Certo, mas onde os Microsservi\xe7os entram nessa hist\xf3ria?",id:"certo-mas-onde-os-microsservi\xe7os-entram-nessa-hist\xf3ria",level:3}];function m(e){const s={em:"em",h1:"h1",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.h1,{id:"introdu\xe7\xe3o",children:"Introdu\xe7\xe3o"}),"\n",(0,r.jsxs)(s.p,{children:["A Arquitetura de ",(0,r.jsx)(s.em,{children:"Microsservi\xe7os"})," vem ganhando bastante destaque nos \xfaltimos anos e vem sendo um dos principais requisitos para cargos como Desenvolvedores ou Engenheiros de Software. Por isso, vem sendo necess\xe1rio que os programadores n\xe3o s\xf3 tenham um certo n\xedvel de conhecimento sobre o assunto, como o ",(0,r.jsx)(s.em,{children:"dominem"}),"."]}),"\n",(0,r.jsx)(s.h3,{id:"mas-o-que-seriam-microsservi\xe7os",children:"Mas, o que seriam Microsservi\xe7os?"}),"\n",(0,r.jsxs)(s.p,{children:["Para entender bem sobre ",(0,r.jsx)(s.em,{children:"Microsservi\xe7os"}),' (e de uma maneira mais simples), \xe9 importante que conhe\xe7amos os conceitos de uma outra arquitetura amplamente utilizada hoje em dia, mesmo que hajam autores e programadores que a julguem "defasada" (o que passa longe de ser verdade). A arquitetura em quest\xe3o \xe9 a ',(0,r.jsx)(s.strong,{children:"Monol\xedtica"})," (ou, conhecida apenas como Monolitos)."]}),"\n",(0,r.jsx)(s.h3,{id:"uma-breve-introdu\xe7\xe3o-sobre-monolitos",children:"Uma breve introdu\xe7\xe3o sobre Monolitos"}),"\n",(0,r.jsxs)(s.p,{children:["Uma ",(0,r.jsx)(s.em,{children:"Arquitetura Monol\xedtica"})," \xe9 relativamente ",(0,r.jsx)(s.strong,{children:"simples"})," de compreender, tendo como principais caracter\xedsticas:"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"\xdanico Processo:"})," Uma aplica\xe7\xe3o Monol\xedtica geralmente \xe9 composta pelo Front-end e Back-end acoplados na mesma estrutura de c\xf3digo."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"\xdanico Deploy:"})," Como consequ\xeancia direta do t\xf3pico anterior, exatamente por ter apenas um \xfanico processo, uma aplica\xe7\xe3o monol\xedtica tem uma \xfanica esteira de CI/CD e, portanto, \xe9 feito um \xfanico deploy para ",(0,r.jsx)(s.strong,{children:"TODO"})," o sistema subir para a produ\xe7\xe3o."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Banco de Dados \xfanico para todo o sistema:"})," Outra ",(0,r.jsx)(s.strong,{children:"caracter\xedstica fundamental"})," da ",(0,r.jsx)(s.em,{children:"arquitetura monol\xedtica"})," \xe9 a utiliza\xe7\xe3o de um ",(0,r.jsx)(s.em,{children:"\xfanico"})," banco de dados para toda a aplica\xe7\xe3o."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Comunica\xe7\xe3o S\xedncrona:"})," Como toda a aplica\xe7\xe3o est\xe1 rodando em um \xfanico processo, a comunica\xe7\xe3o entre seus diferentes dom\xednios tende a ser ",(0,r.jsx)(s.em,{children:"s\xedncrona"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Muitas responsabilidades:"})," Para finalizar, uma arquitetura monol\xedtica \xe9 repleta de responsabilidades. Um exemplo disso, \xe9 uma Arquitetura Monol\xedtica de E-commerce, o Monolito ter\xe1 as responsabilidades de gerir usu\xe1rios, categorias, produtos, pagamento, etc."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["Portanto, percebemos que, em uma arquitetura monol\xedtica, o sistema tem um ",(0,r.jsx)(s.strong,{children:"forte"})," acoplamento e realiza seu gerenciamento em um ",(0,r.jsx)(s.strong,{children:"\xfanico processo"}),". Essas caracter\xedsticas s\xe3o interessantes, porque, logo podemos chegar a ",(0,r.jsxs)(s.em,{children:["aspectos ",(0,r.jsx)(s.strong,{children:"positivos"})," desta arquitetura, bem como ",(0,r.jsx)(s.strong,{children:"negativos"})]}),", por\xe9m isso ser\xe1 t\xf3pico para outra se\xe7\xe3o mais aprofundada sobre ",(0,r.jsx)(s.em,{children:"Monolitos"}),"."]}),"\n",(0,r.jsx)(s.h3,{id:"certo-mas-onde-os-microsservi\xe7os-entram-nessa-hist\xf3ria",children:"Certo, mas onde os Microsservi\xe7os entram nessa hist\xf3ria?"}),"\n",(0,r.jsxs)(s.p,{children:["Ent\xe3o, como pudemos concluir na an\xe1lise sobre as principais caracter\xedsticas de uma Arquitetura Monol\xedtica, esta \xe9 caracterizada por um ",(0,r.jsx)(s.strong,{children:"forte"})," ",(0,r.jsx)(s.em,{children:"acoplamento"})," entre os diferentes dom\xednios da aplica\xe7\xe3o e, em que, todos estes rodam e compartilham de um ",(0,r.jsx)(s.strong,{children:"\xfanico processo"}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["Os ",(0,r.jsx)(s.em,{children:"Microsservi\xe7os"}),", por sua vez, chegaram para ",(0,r.jsx)(s.strong,{children:'"separar"'})," um pouco mais essa Arquitetura Monol\xedtica (que j\xe1 vem sendo utilizada desde os prim\xf3rdios do Desenvolvimento Web), identificando os diferentes dom\xednios que a comp\xf5em ",(0,r.jsxs)(s.em,{children:["(para quem \xe9 adepto ao DDD - Domain Driven Design, isso se assemelha ao conceito de ",(0,r.jsx)(s.strong,{children:"Bounded Contexts"}),")"]})," e dividindo-a em diferentes servi\xe7os. Cada servi\xe7o, portanto, seria ",(0,r.jsx)(s.strong,{children:"independente"}),", possuiria sua pr\xf3pria esteira de CI/CD, seu pr\xf3prio Banco de Dados e seria respons\xe1vel apenas pelo que seu ",(0,r.jsx)(s.strong,{children:"dom\xednio"})," prop\xf5e."]}),"\n",(0,r.jsx)(s.p,{children:"Portanto, como principais caracter\xedsticas de uma Arquitetura de Microsservi\xe7os, temos:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"V\xe1rios Processos:"})," Como h\xe1 a identifica\xe7\xe3o e separa\xe7\xe3o dos diferentes dom\xednios em servi\xe7os independentes, cada servi\xe7o ir\xe1 rodar em um (ou mais) processo (s) ",(0,r.jsx)(s.em,{children:"separado (s) dos demais"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Diferentes Deploys:"})," Cada servi\xe7o ter\xe1 sua pr\xf3pria esteira de CI/CD."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Banco de Dados por Servi\xe7o"}),": Cada servi\xe7o ter\xe1 seu pr\xf3prio Banco de Dados, onde ser\xe1 o respons\xe1vel por gerenciar os dados do seu dom\xednio. Caso precise de informa\xe7\xf5es que estejam presentes em dom\xednios diferentes, ter\xe1 que realizar ",(0,r.jsx)(s.strong,{children:"comunica\xe7\xf5es"})," com os servi\xe7os desses dom\xednios e solicitar esses dados, sem acessar outros Banco de Dados diretamente."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Comunica\xe7\xe3o S\xedncrona e Ass\xedncrona:"})," No processo de Comunica\xe7\xe3o entre Microsservi\xe7os, h\xe1 a possibilidade dessa comunica\xe7\xe3o ser s\xedncrona ou ass\xedncrona (a depender do caso de uso em quest\xe3o), e, portanto, pode surgir a necessidade de utilizar ferramentas como RabbitMQ, Amazon SQS/SNS ou Kafka."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Responsabilidade \xdanica:"})," Para quem j\xe1 est\xe1 familiarizado com os princ\xedpios SOLID, esse conceito \xe9 relativamente simples de entender. Cada servi\xe7o ter\xe1 uma \xfanica responsabilidade com base no seu dom\xednio e, novamente, pode surgir a necessidade de comunica\xe7\xe3o com outros microsservi\xe7os."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:'Ent\xe3o, pudemos perceber o quanto a Arquitetura Monol\xedtica foi (e ainda \xe9) fundamental para o surgimento e a "expans\xe3o" da Arquitetura de Microsservi\xe7os nos \xfaltimos anos. S\xe3o conceitos completamente diferentes, mas que se complementam. Nas pr\xf3ximas se\xe7\xf5es, vamos nos aprofundar nesses conceitos e compar\xe1-los com mais aprofundamento te\xf3rico. Al\xe9m disso, vamos identificar qual op\xe7\xe3o ser\xe1 a melhor para o seu projeto, os pr\xf3s e contras de cada um, entre outros t\xf3picos.'})]})}function l(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}},5710:(e,s,o)=>{o.d(s,{R:()=>a,x:()=>t});var r=o(758);const i={},n=r.createContext(i);function a(e){const s=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function t(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(n.Provider,{value:s},e.children)}}}]);